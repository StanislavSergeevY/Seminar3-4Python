###############################
### |ДЗ 28.05.2023 СЕМИНАР| ###
###############################
# ПОДКЛЮЧАЕМЫЕ БИБЛИОТЕКИ:
import random # подключение библиотеки для функционирования random.randint(0, 10)
#####################################################
"""
Задача 22:
1 Часть
Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
2 часть
Пользователь вводит 2 числа. n — кол-во элементов первого множества.
 m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.
"""

# # 1-ая ЧАСТЬ
# set_1 = set([random.randint(0, 10) for i in range(random.randint(4, 9))]) # 1-Й неупорядоченный набор целых чисел
# print(*set_1)
# set_2 = set([random.randint(0, 10) for i in range(random.randint(4, 9))]) # 2-Й неупорядоченный набор целых чисел
# print(*set_2)
# set_result = set_1.intersection(set_2)
# list_result = list(set_result)
# list_result.sort()
# print(*list_result)

# # 1-ая ЧАСТЬ !!!альтернативный вариант!!!
# kit_1 = [random.randint(0, 10) for i in range(random.randint(4, 9))] # 1-Й неупорядоченный набор целых чисел
# print(*kit_1)
# kit_2 = [random.randint(0, 10) for i in range(random.randint(4, 9))] # 2-Й неупорядоченный набор целых чисел
# print(*kit_2)
# set_1 = set(kit_1)
# set_2 = set(kit_2)
# set_result = set_1 & set_2
# list_result = list(set_result)
# list_result.sort()
# print(*list_result)

# # 2-ая ЧАСТЬ
# set_1 = set()
# set_2 = set()
# for i in range(int(input("Введите кол-во элементов первого множества: "))):
#   set_1.add(int(input("Введите элементы Первого множества:")))
# for i in range(int(input("Введите кол-во элементов второго множества: "))):
#   set_2.add(int(input("Введите элемент Второго множества: ")))
# print(set_1)
# print(set_2)

#####################################################

#####################################################
"""
Задача 24: В фермерском хозяйстве в Карелии выращивают чернику.
Она растёт на круглой грядке, причём кусты высажены только по окружности.
Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло
различное число ягод — на i-ом кусте выросло ai ягод.
В этом фермерском хозяйстве внедрена система автоматического сбора черники.
Эта система состоит из управляющего модуля и нескольких собирающих модулей.
Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом,
собирает ягоды с этого куста и с двух соседних с ним.
Напишите программу для нахождения максимального числа ягод,
которое может собрать за один заход собирающий модуль,
находясь перед некоторым кустом заданной во входном файле грядки.
"""

# # Заполняем кусты на грядке ягодами
# # n_bushes = random.randint(5, 10) # генерируем общее кол-во кустов
# n_bushes = 9 # фиксированное кол-во кустов
# print(n_bushes)
# d = dict()
# for i in range(n_bushes):
#   d[i] = random.randint(1, 99)
#   print(f"Куста № {i} содержит {d[i]} ягод.")
# print(d)

# # Собираем ягоды
# max_sum = 0
# max_bushes = list()
# for i in range(2, n_bushes, 3):
#   sum = d[i-2]+d[i-1]+d[i]
#   print(sum, end=", ") # Вывод сумм для проверки результата
#   if sum > max_sum:
#     max_sum = sum
#     max_bushes = i-2, i-1, i
# print()
# print(f"Наибольше кол-во ягод {max_sum} шт., собрано с кустов под номерами:", *max_bushes)

#####################################################